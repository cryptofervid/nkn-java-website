"use strict";(self.webpackChunknkn_java_website=self.webpackChunknkn_java_website||[]).push([[11],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return u}});var a=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),m=c(t),u=s,h=m["".concat(l,".").concat(u)]||m[u]||p[u]||i;return t?a.createElement(h,o(o({ref:n},d),{},{components:t})):a.createElement(h,o({ref:n},d))}));function u(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=t.length,o=new Array(i);o[0]=m;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r.mdxType="string"==typeof e?e:s,o[1]=r;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3861:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return r},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return m}});var a=t(7462),s=t(3366),i=(t(7294),t(3905)),o=["components"],r={sidebar_position:1},l="Session",c={unversionedId:"session",id:"session",isDocsHomePage:!1,title:"Session",description:"Session sets up a tunnel between two NKN clients and transmits data between them. Sessions provide features to handle congesion, dropped packets, packet ordering, retry, buffering etc. The following methods are available on the Session API",source:"@site/docs/session.md",sourceDirName:".",slug:"/session",permalink:"/nkn-java-website/docs/session",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/session.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"environment_sidebar",previous:{title:"Client",permalink:"/nkn-java-website/docs/client"},next:{title:"Messages",permalink:"/nkn-java-website/docs/messages"}},d=[{value:"On Session Established Callback",id:"on-session-established-callback",children:[]},{value:"On Session Broken Tunnel Callback",id:"on-session-broken-tunnel-callback",children:[]},{value:"Get Input Stream",id:"get-input-stream",children:[]},{value:"Get Output Stream",id:"get-output-stream",children:[]},{value:"Close",id:"close",children:[]},{value:"Session Configuration",id:"session-configuration",children:[{value:"Number of multiclients used",id:"number-of-multiclients-used",children:[]},{value:"Preferred MTU",id:"preferred-mtu",children:[]},{value:"Preferred Window Size",id:"preferred-window-size",children:[]}]}],p={toc:d};function m(e){var n=e.components,t=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"session"},"Session"),(0,i.kt)("p",null,"Session sets up a tunnel between two NKN clients and transmits data between them. Sessions provide features to handle congesion, dropped packets, packet ordering, retry, buffering etc. The following methods are available on the Session API"),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The code examples in this document assume that we have a session object. In a duplex communication channel one entity behaves as a server and waits for session entablishment while the other take up the role of a client and sends session establishment request to the server. "),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"To get the session object on the entity playing the role of server:")),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},'NKNClient nknClient = new NKNClient(new Identity("server", Wallet.createNew()));\nnknClient.start();\n\nSessionProtocol sessionProtocol = nknClient.sessionProtocol();\nsessionProtocol.onSessionRequest( session -> {\n\n    //We have the server side session object here.\n\n    return true;\n});\n')),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"To get the session object on the entity playing the role of client:")),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},'NKNClient nknClient = new NKNClient(new Identity("server", Wallet.createNew()));\nnknClient.start();\n\nSession session = client.sessionProtocol().dialSession(targetFullIdentifier);\n')))),(0,i.kt)("h3",{id:"on-session-established-callback"},"On Session Established Callback"),(0,i.kt)("p",null,"This callback provides the user with a mechanism to handle the incoming session requests and perform some operation e.g. send or receive data. This method accepts a runnable that would be called once the session is established."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"class SessionEstablishedCallback implements Runnable {\n\n    @Override\n    public void run() {\n        // Do the processing post session establishment    \n    }\n}\n\nsession.onSessionEstablished(new SessionEstablishedCallback() );\n")),(0,i.kt)("h3",{id:"on-session-broken-tunnel-callback"},"On Session Broken Tunnel Callback"),(0,i.kt)("p",null,"This callback is called if the session tunnecl break sdue to some unexpected reasons."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"class SessionBrokenTunnelCallback implements Runnable {\n\n    @Override\n    public void run() {\n        // Do the processing post session establishment    \n    }\n}\n\nsession.onSessionBrokenTunnel(new SessionBrokenTunnelCallback() );\n")),(0,i.kt)("h3",{id:"get-input-stream"},"Get Input Stream"),(0,i.kt)("p",null,"Get the input stream corresponding to the session object."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"final SessionInputStream sessionInputStream = session.getInputStream();\n")),(0,i.kt)("h3",{id:"get-output-stream"},"Get Output Stream"),(0,i.kt)("p",null,"Get the output stream corresponding to the session object."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"final SessionOutputStream sessionOutputStream = session.getOutputStream();\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Session input and output streams provide standard java stream functionality. Additionally they provide a method ",(0,i.kt)("inlineCode",{parentName:"p"},"getUnconfirmedSentBytesCount()")," to find the number of bytes written to the send queue but not acknowledged as recieved. This can be due to multiple reasons"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Slow Network Connection"),(0,i.kt)("li",{parentName:"ul"},"Overloaded Buffers"),(0,i.kt)("li",{parentName:"ul"},"Missed / Dropped ACK packets")))),(0,i.kt)("h3",{id:"close"},"Close"),(0,i.kt)("p",null,"Close the session."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"session.close();\n")),(0,i.kt)("h2",{id:"session-configuration"},"Session Configuration"),(0,i.kt)("p",null,"Session API provides methods to configure session parameters. The following parameters can be configured"),(0,i.kt)("h3",{id:"number-of-multiclients-used"},"Number of multiclients used"),(0,i.kt)("p",null,"Set the number of multiclients to be used"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"client.sessionProtocol().setIncomingPreferredMulticlients(8);\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Default number of multiclients is 4."))),(0,i.kt)("h3",{id:"preferred-mtu"},"Preferred MTU"),(0,i.kt)("p",null,"Set the preferred MTU for the session"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"client.sessionProtocol().setIncomingPreferredMtu(512);\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Default value of MTU is 1024."))),(0,i.kt)("h3",{id:"preferred-window-size"},"Preferred Window Size"),(0,i.kt)("p",null,"Set the preferred window size for the session"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"client.sessionProtocol().setIncomingPreferredWinSize(8 * 1024 * 1024);\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Default value of window size is 4 KB"))),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The above examples show how to set these session paramters on the server side of the session. For the client side use the overriden method while creating the session. The overriden method accepts these prameters as arguments."),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"client.sessionProtocol().dialSession(String destinationFullIdentifier, int multiclients, String[] targetPrefixes, int maxMtu, int maxWindowSize)\n")),(0,i.kt)("p",{parentName:"div"},"targetPrefixes is a String array such as ",(0,i.kt)("inlineCode",{parentName:"p"},"__0__"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"__1__")," which are the prefixes of multiclient on which the server side is listening. Default are ",(0,i.kt)("inlineCode",{parentName:"p"},"__${i}__")," for i in range 0 to multiclient count. To use default values pass this parameter as null. Listening side listens for a connection on empty prefix as well, but that prefix will not be used for actual communication."))))}m.isMDXComponent=!0}}]);