"use strict";(self.webpackChunknkn_java_website=self.webpackChunknkn_java_website||[]).push([[582],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),u=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},b=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=u(n),m=r,d=b["".concat(o,".").concat(m)]||b[m]||p[m]||s;return n?i.createElement(d,a(a({ref:t},c),{},{components:n})):i.createElement(d,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=b;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var u=2;u<s;u++)a[u]=n[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}b.displayName="MDXCreateElement"},1818:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return c},default:function(){return b}});var i=n(7462),r=n(3366),s=(n(7294),n(3905)),a=["components"],l={sidebar_position:1},o="Publish Subscribe Message Exchange",u={unversionedId:"pubsub_example",id:"pubsub_example",isDocsHomePage:!1,title:"Publish Subscribe Message Exchange",description:"This example walks through the following scenarios:",source:"@site/docs/pubsub_example.md",sourceDirName:".",slug:"/pubsub_example",permalink:"/nkn-java-website/docs/pubsub_example",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/pubsub_example.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"environment_sidebar",previous:{title:"Multicast Message Exchange",permalink:"/nkn-java-website/docs/multicast_example"}},c=[{value:"Unsubscribe from a topic",id:"unsubscribe-from-a-topic",children:[{value:"Subscribe to a topic",id:"subscribe-to-a-topic",children:[]},{value:"Create subscription client and process messages",id:"create-subscription-client-and-process-messages",children:[]},{value:"Fetch subscription details",id:"fetch-subscription-details",children:[]},{value:"Publish the message",id:"publish-the-message",children:[]}]},{value:"Close the client(s)",id:"close-the-clients",children:[]}],p={toc:c};function b(e){var t=e.components,n=(0,r.Z)(e,a);return(0,s.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"publish-subscribe-message-exchange"},"Publish Subscribe Message Exchange"),(0,s.kt)("p",null,"This example walks through the following scenarios:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Unsubscribe from a topic"),(0,s.kt)("li",{parentName:"ul"},"Subscribe to a topic and process incoming messages"),(0,s.kt)("li",{parentName:"ul"},"Get subscription details"),(0,s.kt)("li",{parentName:"ul"},"Publish Message")),(0,s.kt)("h2",{id:"unsubscribe-from-a-topic"},"Unsubscribe from a topic"),(0,s.kt)("p",null,"Unsubscribe an identifier from a Topic."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'final String identifier = "clientA";\n\n//Unsubscribe to make sure there are no existing subscriptions\nSystem.out.println("UN Subscribing from \'" + topic + "\' using " + identifier + (identifier == null || identifier.isEmpty() ? "" : ".") + Hex.toHexString(pubsubWallet.getPublicKey()));\nString txID = pubsubWallet.tx().unsubscribe(topic, identifier);\n\nif (txID == null) {\n    System.out.println("  Transaction failed");\n} else {\n    System.out.println("  Transaction successful: " + txID);\n        }\n\n')),(0,s.kt)("h3",{id:"subscribe-to-a-topic"},"Subscribe to a topic"),(0,s.kt)("p",null,"Subscribe to a topic."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'System.out.println("Subscribing to \'" + topic + "\' using " + identifier + (identifier == null || identifier.isEmpty() ? "" : ".") + Hex.toHexString(pubsubWallet.getPublicKey()));\ntxID = pubsubWallet.tx().subscribe(topic, 15, identifier, (String) null);\n\nif (txID == null) {\n    System.out.println("  Transaction failed");\n} else {\n    System.out.println("  Transaction successful: " + txID);\n}\n')),(0,s.kt)("h3",{id:"create-subscription-client-and-process-messages"},"Create subscription client and process messages"),(0,s.kt)("p",null,"Use the subscribed identifier to create a client and process any incoming messages."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'subscriberClient = new NKNClient(new Identity(identifier, pubsubWallet));\nsubscriberClient.simpleMessagesProtocol().onNewMessage(msg -> {\n    if (msg.isText) {\n        System.out.println("New text from " + msg.from + "\\n  ==> " + msg.textData);\n    } else if (msg.isBinary) {\n        System.out.println("New binary from " + msg.from + "\\n  ==> 0x" + Hex.toHexString(msg.binaryData.toByteArray()).toUpperCase());\n    }\n});\nsubscriberClient.start();\nThread.sleep(1000);\n')),(0,s.kt)("h3",{id:"fetch-subscription-details"},"Fetch subscription details"),(0,s.kt)("p",null,"Fetch the subscription details from the topic including details of subscriber and the number of subscribers."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'final NKNExplorer.Subscription.Subscriber[] subscribers = NKNExplorer.Subscription.getSubscribers(topic);\nSystem.out.println("Subscribers of \'" + topic + "\':");\nfor (NKNExplorer.Subscription.Subscriber s : subscribers) {\n    System.out.println("  " + s.fullClientIdentifier + (s.meta != null && s.meta.isEmpty() ? "" : (": " + s.meta)));\n}\nSystem.out.println("Total: " + NKNExplorer.Subscription.getSubscriberCount(topic) + " subs");\n\nif (subscribers.length > 0) {\n    final NKNExplorer.Subscription.SubscriptionDetail detail = NKNExplorer.Subscription.getSubscriptionDetail(topic, subscribers[0].fullClientIdentifier);\n    if (detail == null) {\n        System.out.println("Seems like there is no record of requested subscription");\n    } else {\n        System.out.println("Meta of the " + detail.fullClientIdentifier + ": \'" + detail.meta + "\', expires At: " + detail.expiresAt);\n    }\n}\n')),(0,s.kt)("h3",{id:"publish-the-message"},"Publish the message"),(0,s.kt)("p",null,"Publish a message using a new client. The message is received by the subscribing client and processed accordingly."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'final NKNClient publisherClient = new NKNClient(new Identity(null, Wallet.createNew()));\npublisherClient.start().simpleMessagesProtocol().publishTextAsync(topic, true, "Hello all my subscribers!");\nThread.sleep(7000);\n')),(0,s.kt)("h2",{id:"close-the-clients"},"Close the client(s)"),(0,s.kt)("p",null,"Close both the publisher and the subscriber"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"publisherClient.close();\nif (subscriberClient != null) subscriberClient.close();\n")))}b.isMDXComponent=!0}}]);